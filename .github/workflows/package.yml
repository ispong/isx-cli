name: 打包isx工具

# 推送到main分支就触发
on:
  push:
    branches:
      - main

jobs:

  # 在mac中打包
  packageOnMac:

    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
      - name: 下载代码
        uses: actions/checkout@v4

      - name: 缓存python依赖
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 安装python环境
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 下载python依赖
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: 打包isx
        run: python3 -m nuitka --follow-imports --output-dir=./build --output-filename=./target/isx_macos main.py

      - name: 安装node环境
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: isx上传到阿里云oss中
        uses: tiyee/aliyun-oss-auto-upload@v2.0.0
        with:
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}
          region: oss-cn-shanghai
          bucket: openfly
          remote-dir: /isx/
          local-folder: ./target
          secure: true

  # 在linux中打包
  packageOnLinux:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:

      - name: 下载代码
        uses: actions/checkout@v4

      - name: 缓存python依赖
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 安装python环境
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 下载python依赖
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: 打包isx
        run: python3 -m nuitka --follow-imports --output-dir=./build --output-filename=./target/isx_linux main.py

      - name: 安装node环境
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: isx上传到阿里云oss中
        uses: tiyee/aliyun-oss-auto-upload@v2.0.0
        with:
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}
          region: oss-cn-shanghai
          bucket: openfly
          remote-dir: /isx/
          local-folder: ./target
          secure: true

  # 在windows中打包
  packageOnWindows:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:

      - name: 下载代码
        uses: actions/checkout@v4

      - name: 缓存python依赖
        uses: actions/cache@v3
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 安装python环境
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 下载python依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 打包isx
        run: python3 -m nuitka --follow-imports --output-dir=./build --output-filename=./target/isx_windows main.py

      - name: 安装node环境
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: isx上传到阿里云oss中
        uses: tiyee/aliyun-oss-auto-upload@v2.0.0
        with:
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}
          region: oss-cn-shanghai
          bucket: openfly
          remote-dir: /isx/
          local-folder: ./target
          secure: true